// define(["jquery","core/ajax","core/str","core/config","core/templates","core/notification","core/modal_factory","core/modal_events","core/fragment"],function(e,t,a,n,d,s,o,i,c){return{init:function(a){e("body").on("click",".introtoggle",function(t){t.preventDefault(),e("ul.ulclassone").toggle(),e("ul.ulclasstwo").css("display","none"),e("ul.ulclassthree").css("display","none")}),e("body").on("click",".maintoogle",function(t){t.preventDefault(),e("ul.ulclasstwo").toggle(),e("ul.ulclassthree").css("display","none"),e("ul.ulclassone").css("display","none")}),e("body").on("click",".selecttoogle",function(t){t.preventDefault(),e("ul.ulclassthree").toggle(),e("ul.ulclassone").css("display","none"),e("ul.ulclasstwo").css("display","none")}),e("body").on("click",".introfeedback",function(){o.create({title:"Add new feedback",body:'<div class="formfeedback"><form><input type="hidden" class = "feedtype" name="feedbacktype" value="1" /><textarea name="feedbacktext" class="insertfeedback"></textarea><button class ="savefeedback" type="button" value="Submit">Submit</button></form></div>',large:!0,footer:""}).then(function(e){return e.show(),e.getRoot().addClass("createtenantuser"),e.getRoot().on(i.hidden,function(){e.destroy()}),e})}),e("body").on("click",".ulclassone li .fbname",function(){if("addnew"!=e(this).attr("attr")){var t=' <span class="introductry">'+e(this).text()+"</span>";e("#id_assignfeedbackcomments_editoreditable").find("p").length>0?(e("#id_assignfeedbackcomments_editoreditable").find("p").append(t),e("#id_assignfeedbackcomments_editor").find("p").append(t)):(e("#id_assignfeedbackcomments_editoreditable").append("<p>"+t+"</p>"),e("#id_assignfeedbackcomments_editor").append("<p>"+t+"</p>")),e("#id_assignfeedbackcomments_editoreditable").focus()}}),e("body").on("click",".mainfeedback",function(){o.create({title:"Add new feedback",body:'<div class="formfeedback"><form><input type="hidden" class = "feedtype" name="feedbacktype" value="2" /><textarea name="feedbacktext" class="insertfeedback"></textarea><button class ="savefeedback" type="button" value="Submit">Submit</button></form></div>',large:!0,footer:""}).then(function(e){return e.show(),e.getRoot().addClass("createtenantuser"),e.getRoot().on(i.hidden,function(){e.destroy()}),e})}),e("body").on("click",".ulclasstwo li .fbname",function(){if("addnew"!=e(this).attr("attr")){var t=' <span class="mainfed">'+e(this).text()+"</span>";e("#id_assignfeedbackcomments_editoreditable").find("p").length>0?(e("#id_assignfeedbackcomments_editoreditable").find("p").append(t),e("#id_assignfeedbackcomments_editor").find("p").append(t)):(e("#id_assignfeedbackcomments_editoreditable").append("<p>"+t+"</p>"),e("#id_assignfeedbackcomments_editor").append("<p>"+t+"</p>")),e("#id_assignfeedbackcomments_editoreditable").focus()}}),e("body").on("click",".finalfeedback",function(){o.create({title:"Add new feedback",body:'<div class="formfeedback"><form><input type="hidden" class = "feedtype" name="feedbacktype" value="3" /><textarea name="feedbacktext" class="insertfeedback"></textarea><button class ="savefeedback" type="button" value="Submit">Submit</button></form></div>',large:!0,footer:""}).then(function(e){return e.show(),e.getRoot().addClass("createtenantuser"),e.getRoot().on(i.hidden,function(){e.destroy()}),e})}),e("body").on("click",".ulclassthree li .fbname",function(){if("addnew"!=e(this).attr("attr")){var t=' <span class="finalfed">'+e(this).text()+"</span>";e("#id_assignfeedbackcomments_editoreditable").find("p").length>0?(e("#id_assignfeedbackcomments_editoreditable").find("p").append(t),e("#id_assignfeedbackcomments_editor").find("p").append(t)):(e("#id_assignfeedbackcomments_editoreditable").append("<p>"+t+"</p>"),e("#id_assignfeedbackcomments_editor").append("<p>"+t+"</p>")),e("#id_assignfeedbackcomments_editoreditable").focus()}}),e(document).on("click",".savefeedback",function(){var n=e(".insertfeedback").val().trim(),d=e(".feedtype").val();if(""==n)return alert("Please enter feedback!"),!1;t.call([{methodname:"mod_assign_insertfeedback",args:{feedback:n,type:d,asgid:a}}])[0].done(function(t){var a=JSON.parse(t);a.result,e(".formfeedback").html(a.message),1==d&&e(".ulclassone li").eq(0).before(e(a.htmltext)),2==d&&e(".ulclasstwo li").eq(0).before(e(a.htmltext)),3==d&&e(".ulclassthree li").eq(0).before(e(a.htmltext))})}),e(document).on("click",".delete_feedback",function(a){a.preventDefault();var n=e(this).attr("data-id");t.call([{methodname:"mod_assign_deletefeedback",args:{id:n}}])[0].done(function(t){var a=JSON.parse(t);a.result,e(".formfeedback").html(a.message)})}),e(document).on("click",".delete_feedback",function(t){t.preventDefault(),e(this).parent().parent().remove()}),e(document).on("click",".edit_feedback",function(t){t.preventDefault();var a=e(this).attr("data-id"),n=e(this).parent().parent().text();o.create({title:"Update feedback",body:'<div class="formfeedback"><form><input type="hidden" class = "feedtype" name="feedbacktype" value="1" /><textarea name="feedbacktext" class="updfeedback">'+n+'</textarea><button class ="updatefeedback" type="button" value="Submit" data-id="'+a+'">Update</button></form></div>',large:!0,footer:""}).then(function(e){return e.show(),e.getRoot().addClass("createtenantuser"),e.getRoot().on(i.hidden,function(){e.destroy()}),e})}),e(document).on("click",".updatefeedback",function(a){a.preventDefault();var n=e(this).attr("data-id"),d=e(".updfeedback").val();t.call([{methodname:"mod_assign_updatefeedback",args:{id:n,feedback:d}}])[0].done(function(t){var a=JSON.parse(t);a.result,e(".formfeedback").html(a.message),e("li[data-id="+n+"]").find(".fbname").text(d)})})}}});



define(["jquery", "core/ajax", "core/str", "core/config", "core/templates", "core/notification", "core/modal_factory", "core/modal_events", "core/fragment"], function(e, t, a, n, d, s, o, i, c) {

	return {

		init: function(a) {

			e("body").on("click", ".introtoggle", function(t) {

				t.preventDefault(), e("ul.ulclassone").toggle(), e('.reclist').hide(), e("ul.ulclasstwo").css("display", "none"), e("ul.ulclassthree").css("display", "none"), e("ul.ulclassfour").css("display", "none")

			}), e("body").on("click", ".maintoogle", function(t) {

				t.preventDefault(), e("ul.ulclasstwo").toggle(), e('.reclist').hide(), e("ul.ulclassthree").css("display", "none"), e("ul.ulclassone").css("display", "none"), e("ul.ulclassfour").css("display", "none")

			}), e("body").on("click", ".selecttoogle", function(t) {

				t.preventDefault(), e("ul.ulclassthree").toggle(), e('.reclist').hide(), e("ul.ulclassone").css("display", "none"), e("ul.ulclasstwo").css("display", "none"), e("ul.ulclassfour").css("display", "none")

			}), 

			//----------------- start ----------------------

			e("body").on("click", ".resourcetoogle", function(t) {

				t.preventDefault(), e("ul.ulclassfour").toggle(),console.log("fourrr"), e("ul.ulclassone").css("display", "none"), e("ul.ulclasstwo").css("display", "none"), e("ul.ulclassthree").css("display", "none")

			}),

			//----------------- end ----------------------



			 e("body").on("click", ".introfeedback", function(event, fe) {

				o.create({

					title: "Add new feedback",

					body: '<div class="formfeedback"><form><input type="hidden" class = "feedtype" name="feedbacktype" value="1" /><div class="ealert"></div><input type="text" name="keywords" class="prekey" placeholder="Enter Preferred Keywords" /><textarea name="feedbacktext" class="insertfeedback">'+ ((fe) ? fe : "") +'</textarea><button class ="savefeedback" type="button" value="Submit">Submit</button></form></div>',

					large: !0,

					footer: ""

				}).then(function(e) {

					return e.show(), e.getRoot().addClass("createtenantuser"), e.getRoot().on(i.hidden, function() {

						e.destroy()

					}), e

				})

			}), e("body").on("click", ".ulclassone li .fbname", function() {

				if ("addnew" != e(this).attr("attr")) {

					var t = ' <span class="introductry">' + e(this).text() + "</span>";

					let placeholder = "(First_Name|Last_Name|Full_Name)";
					const regex = new RegExp(`\\{${placeholder}\\}`, 'g');
					let firstNameMatch = t.match(regex) ? true : false;
					var fullname=$('div[data-region="user-info"]>h4 a').contents().filter(function(){return 3===this.nodeType;}).text().trim();
					let result;
					t = t.replace(regex, (match, p1) => {
					    switch (p1) {
					        case "First_Name":
					            return fullname.split(" ")[0];
					        case "Last_Name":
					            const nameParts = fullname.split(" ");
					            return nameParts.length > 1 ? nameParts[nameParts.length - 1] : '';
					        case "Full_Name":
					            return fullname;
					        default:
					            return match; // If no match, return the placeholder itself
					    }
					});


					var editor = window.parent.tinyMCE.get('id_assignfeedbackcomments_editor');

							var content = editor.getContent({ format: 'html' });
						    var parser = new DOMParser();
						    var doc = parser.parseFromString(content, 'text/html');
						    var firstParagraph = doc.querySelector('p');
						    if (firstParagraph) {
						        firstParagraph.innerHTML += t;
						    }else {
						        var newParagraph = doc.createElement('p');
						        newParagraph.innerHTML = t;
						        doc.body.appendChild(newParagraph);
						    }
						    var updatedContent = doc.body.innerHTML;
						    editor.setContent(updatedContent);

					// e("#id_assignfeedbackcomments_editoreditable").find("p").length > 0 ? (e("#id_assignfeedbackcomments_editoreditable").find("p").append(t), e("#id_assignfeedbackcomments_editor").find("p").append(t)) : (e("#id_assignfeedbackcomments_editoreditable").append("<p>" + t + "</p>"), e("#id_assignfeedbackcomments_editor").append("<p>" + t + "</p>")), e("#id_assignfeedbackcomments_editoreditable").focus()

				}

			}), e("body").on("click", ".mainfeedback", function(event, fe) {

				o.create({

					title: "Add new feedback",

					body: '<div class="formfeedback"><form><input type="hidden" class = "feedtype" name="feedbacktype" value="2" /><div class="ealert"></div><input type="text" name="keywords" class="prekey" placeholder="Enter Preferred Keywords" /><textarea name="feedbacktext" class="insertfeedback">'+ ((fe) ? fe : "") +'</textarea><button class ="savefeedback" type="button" value="Submit">Submit</button></form></div>',

					large: !0,

					footer: ""

				}).then(function(e) {

					return e.show(), e.getRoot().addClass("createtenantuser"), e.getRoot().on(i.hidden, function() {

						e.destroy()

					}), e

				})

			}), e("body").on("click", ".ulclasstwo li .fbname", function() {

				if ("addnew" != e(this).attr("attr")) {

					var t = ' <span class="mainfed">' + e(this).text() + "</span>";

					let placeholder = "(First_Name|Last_Name|Full_Name)";
					const regex = new RegExp(`\\{${placeholder}\\}`, 'g');
					let firstNameMatch = t.match(regex) ? true : false;
					var fullname=$('div[data-region="user-info"]>h4 a').contents().filter(function(){return 3===this.nodeType;}).text().trim();
					let result;
					t = t.replace(regex, (match, p1) => {
					    switch (p1) {
					        case "First_Name":
					            return fullname.split(" ")[0];
					        case "Last_Name":
					            const nameParts = fullname.split(" ");
					            return nameParts.length > 1 ? nameParts[nameParts.length - 1] : '';
					        case "Full_Name":
					            return fullname;
					        default:
					            return match; // If no match, return the placeholder itself
					    }
					});


					var editor = window.parent.tinyMCE.get('id_assignfeedbackcomments_editor');
							var content = editor.getContent({ format: 'html' });
						    var parser = new DOMParser();
						    var doc = parser.parseFromString(content, 'text/html');
						    var firstParagraph = doc.querySelector('p');
						    if (firstParagraph) {
						        firstParagraph.innerHTML += t;
						    }else {
						        var newParagraph = doc.createElement('p');
						        newParagraph.innerHTML = t;
						        doc.body.appendChild(newParagraph);
						    }
						    var updatedContent = doc.body.innerHTML;
						    editor.setContent(updatedContent);

					// e("#id_assignfeedbackcomments_editoreditable").find("p").length > 0 ? (e("#id_assignfeedbackcomments_editoreditable").find("p").append(t), e("#id_assignfeedbackcomments_editor").find("p").append(t)) : (e("#id_assignfeedbackcomments_editoreditable").append("<p>" + t + "</p>"), e("#id_assignfeedbackcomments_editor").append("<p>" + t + "</p>")), e("#id_assignfeedbackcomments_editoreditable").focus()

				}

			}), e("body").on("click", ".finalfeedback", function(event, fe) {

				o.create({

					title: "Add new feedback",

					body: '<div class="formfeedback"><form><input type="hidden" class = "feedtype" name="feedbacktype" value="3" /><div class="ealert"></div><input type="text" name="keywords" class="prekey" placeholder="Enter Preferred Keywords" /><textarea name="feedbacktext" class="insertfeedback">'+ ((fe) ? fe : "") +'</textarea><button class ="savefeedback" type="button" value="Submit">Submit</button></form></div>',

					large: !0,

					footer: ""

				}).then(function(e) {

					return e.show(), e.getRoot().addClass("createtenantuser"), e.getRoot().on(i.hidden, function() {

						e.destroy()

					}), e

				})

			}), e("body").on("click", ".ulclassthree li .fbname", function() {

				if ("addnew" != e(this).attr("attr")) {

					var t = ' <span class="finalfed">' + e(this).text() + "</span>";

					let placeholder = "(First_Name|Last_Name|Full_Name)";
					const regex = new RegExp(`\\{${placeholder}\\}`, 'g');
					let firstNameMatch = t.match(regex) ? true : false;
					var fullname=$('div[data-region="user-info"]>h4 a').contents().filter(function(){return 3===this.nodeType;}).text().trim();
					let result;
					t = t.replace(regex, (match, p1) => {
					    switch (p1) {
					        case "First_Name":
					            return fullname.split(" ")[0];
					        case "Last_Name":
					            const nameParts = fullname.split(" ");
					            return nameParts.length > 1 ? nameParts[nameParts.length - 1] : '';
					        case "Full_Name":
					            return fullname;
					        default:
					            return match; // If no match, return the placeholder itself
					    }
					});


					var editor = window.parent.tinyMCE.get('id_assignfeedbackcomments_editor');
							var content = editor.getContent({ format: 'html' });
						    var parser = new DOMParser();
						    var doc = parser.parseFromString(content, 'text/html');
						    var firstParagraph = doc.querySelector('p');
						    if (firstParagraph) {
						        firstParagraph.innerHTML += t;
						    }else {
						        var newParagraph = doc.createElement('p');
						        newParagraph.innerHTML = t;
						        doc.body.appendChild(newParagraph);
						    }
						    var updatedContent = doc.body.innerHTML;
						    editor.setContent(updatedContent);

					// e("#id_assignfeedbackcomments_editoreditable").find("p").length > 0 ? (e("#id_assignfeedbackcomments_editoreditable").find("p").append(t), e("#id_assignfeedbackcomments_editor").find("p").append(t)) : (e("#id_assignfeedbackcomments_editoreditable").append("<p>" + t + "</p>"), e("#id_assignfeedbackcomments_editor").append("<p>" + t + "</p>")), e("#id_assignfeedbackcomments_editoreditable").focus()

				}

			}), 



			//----------------- start ----------------------



			e("body").on("click", ".addresource", function() {

				var assid = e(this).attr("assignid")

				o.create({

					title: "Add new Resources",

					body: '<div class="formfeedback"><form><input type="hidden" id="resassignid" value="'+ assid +'" /><input type="text" id="resname" name="resource" placeholder="Enter Resource File Name" required /><br/><input type="text" id="reslink" name="reslink" placeholder="Enter Resource File URL" required /><br/><button class ="saveresource" type="button" value="Submit">Submit</button></form></div>',

					large: !0,

					footer: ""

				}).then(function(e) {

					return e.show(), e.getRoot().addClass("createtenantuser"), e.getRoot().on(i.hidden, function() {

						e.destroy()

					}), e

				})

			}),





			e("body").on("click", ".saveresource", function() {

				var aid = e("#resassignid").val();

				var rname = e("#resname").val();

				var rlink = e("#reslink").val();

				e.ajax({

			        url: "feedback/adaptive/ajx.php",

			        method: "POST",

			        data: { action: "resourcedata" ,rname: rname ,rlink: rlink ,assignid: aid},

			        success: function(a) {

			            var n = JSON.parse(a);

			            if(n.msg){

			            	e(".formfeedback").html(n.msg);

			            }

			            console.log("respon",n)

			        },

			        error: function(t, a, n) {

			            console.error("AJAX Error:", a, n);

			        }

			    })				 

			}),



			e(document).on("click", ".delete_resource", function(a) {

				a.preventDefault();

				var res_id = e(this).attr("data-id");

				e.ajax({

			        url: "feedback/adaptive/ajx.php",

			        method: "POST",

			        data: { action: "delresourcedata" ,res_id: res_id},

			        success: function(a) {

			            var n = JSON.parse(a);

			            if(n.status){

			            	e(".resour"+n.did).hide();

			            }else{

			            	alert(n.msg);

			            }

			            console.log("Done",n)

			        },

			        error: function(t, a, n) {

			            console.error("AJAX Error:", a, n);

			        }

			    })	

			}),





			e("body").on("click", ".ulclassfour li .fbname", function() {

				var link = e(this).attr("link");

				console.log("link----", link);

				var t = ' <a href="'+ link +'" class="resourc">' + e(this).text() + "</a>";

				let placeholder = "(First_Name|Last_Name|Full_Name)";
				const regex = new RegExp(`\\{${placeholder}\\}`, 'g');
				let firstNameMatch = t.match(regex) ? true : false;
				var fullname=$('div[data-region="user-info"]>h4 a').contents().filter(function(){return 3===this.nodeType;}).text().trim();
				let result;
				t = t.replace(regex, (match, p1) => {
				    switch (p1) {
				        case "First_Name":
				            return fullname.split(" ")[0];
				        case "Last_Name":
				            const nameParts = fullname.split(" ");
				            return nameParts.length > 1 ? nameParts[nameParts.length - 1] : '';
				        case "Full_Name":
				            return fullname;
				        default:
				            return match; // If no match, return the placeholder itself
				    }
				});


				var editor = window.parent.tinyMCE.get('id_assignfeedbackcomments_editor');
				var content = editor.getContent({ format: 'html' });
			    var parser = new DOMParser();
			    var doc = parser.parseFromString(content, 'text/html');
			    var firstParagraph = doc.querySelector('p');
			    if (firstParagraph) {
			        firstParagraph.innerHTML += t;
			    }else {
			        var newParagraph = doc.createElement('p');
			        newParagraph.innerHTML = t;
			        doc.body.appendChild(newParagraph);
			    }
			    var updatedContent = doc.body.innerHTML;
			    editor.setContent(updatedContent);

				// if ("addnew" != e(this).attr("attr")) {

				// 	var t = ' <a href="'+ link +'" class="resourc">' + e(this).text() + "</a>";

				// 	e("#id_assignfeedbackcomments_editoreditable").find("p").length > 0 ? (e("#id_assignfeedbackcomments_editoreditable").find("p").append(t), e("#id_assignfeedbackcomments_editor").find("p").append(t)) : (e("#id_assignfeedbackcomments_editoreditable").append("<p>" + t + "</p>"), e("#id_assignfeedbackcomments_editor").append("<p>" + t + "</p>")), e("#id_assignfeedbackcomments_editoreditable").focus()

				// }

			}), 



			e("body").on("keyup", ".fedsearch", function() {

			    var t = e(this).val().toLowerCase();

			    var typ = e(this).attr("id");

			    var at = e(this).attr("assignid");



			    e.ajax({

			        url: "feedback/adaptive/ajx.php",

			        method: "POST",

			        data: { action: "feedfilter",search_query: t ,assignid: at, feedtyp: typ},

			        success: function(a) {

			            var n = JSON.parse(a);

			            if(typ == "fstsearch"){

			            	e(".frstfeedback").remove();

			            	e.each(n, function(index, t) {

			            		var filtli = '<li class="frstfeedback" data-id='+ t.id +'><span class="fbname">'+ t.feedback +'</span><span class="actionbuttons"><i class="icon fa fa-cog fa-fw edit_feedback" title="Edit"  aria-label="Edit" data-id='+ t.id +' data-value='+ t.feedback +'></i><i class="icon fa fa-trash fa-fw delete_feedback " title="Delete" aria-label="Delete" data-id='+ t.id +'></i></span></li>';

							    e(".ulclassone li:first").after(filtli);

			            	});

			            }else if(typ == "secsearch"){

			            	e(".secfeedback").remove();

			            	e.each(n, function(index, t) {

			            		var filtli = '<li class="secfeedback" data-id='+ t.id +'><span class="fbname">'+ t.feedback +'</span><span class="actionbuttons"><i class="icon fa fa-cog fa-fw edit_feedback" title="Edit"  aria-label="Edit" data-id='+ t.id +' data-value='+ t.feedback +'></i><i class="icon fa fa-trash fa-fw delete_feedback " title="Delete" aria-label="Delete" data-id='+ t.id +'></i></span></li>';

							    e(".ulclasstwo li:first").after(filtli);

			            	});

			            }else if(typ == "thrsearch"){

			            	e(".thrfeedback").remove();

			            	e.each(n, function(index, t) {

			            		var filtli = '<li class="thrfeedback" data-id='+ t.id +'><span class="fbname">'+ t.feedback +'</span><span class="actionbuttons"><i class="icon fa fa-cog fa-fw edit_feedback" title="Edit"  aria-label="Edit" data-id='+ t.id +' data-value='+ t.feedback +'></i><i class="icon fa fa-trash fa-fw delete_feedback " title="Delete" aria-label="Delete" data-id='+ t.id +'></i></span></li>';

							    e(".ulclassthree li:first").after(filtli);

			            	});

			            }

			            console.log("respo", n);



			        },

			        error: function(t, a, n) {

			            console.error("AJAX Error:", a, n);

			        }

			    })

			}),



			e("body").on("keyup", "#searchres", function() {

			    var t = e(this).val().toLowerCase();

			    var at = e(this).attr("assignid");

			    

			    e.ajax({

			        url: "feedback/adaptive/ajx.php",

			        method: "POST",

			        data: { action: "resfilter",search_query: t ,assignid: at},

			        success: function(a) {

			            var n = JSON.parse(a);

			            // console.log('yyyyyy',n)

			            e(".thrfeedback").remove();

			            e.each(n, function(index, t) {

			                var newItem ='<li class="thrfeedback resour'+ t.id +'" data-id='+ t.id +'><span class="fbname" link="'+ t.link +'" >'+ t.resource +'</span><span class="actionbuttons"><i class="icon fa fa-trash fa-fw delete_resource " title="Delete" aria-label="Delete" data-id='+ t.id +'></i></span></li>';

						    if (e(".ulclassfour li").length > 0) {

						        e(".ulclassfour li:first").after(newItem);

						    } else {

						        e(".ulclassfour").append(newItem);

						    }

			            });

			        },

			        error: function(t, a, n) {

			            console.error("AJAX Error:", a, n);

			        }

			    })

			}),



			e(document).ready(function() {

				setTimeout(function() {

				e("#id_assignfeedbackcomments_editor_toolbargroup").append('<div class="suppbtn"></div><hr><div class="fedlist" style="display: flex; justify-content: space-between;" ><div><span class="introfed2" >Introduction Feedback</span><span class="mainfed2" >Main Feedback</span><span class="finalfed2" >Final Feedback</span></div><div><select name="spfilter" id="spfilter"><option value="recupdate">Recently Updated</option><option value="comused">Commonly Used</option><option value="recused">Recently Used</option><option value="recdesc">Recently Added</option></select><button type="button" class="rounded-circle p-1" id="nametags" tabindex="-1">Tags</button></div></div><ul class="unamer" style="display:none"><li class="tag set" data-val="First_Name" >First_Name</li><li class="tag set" data-val="Last_Name">Last_Name</li><li class="tag set" data-val="Full_Name">Full_Name</li></ul>');

				e(".atto_group.files_group").append('<button type="button" id="nametags" tabindex="-1">Tags</button><ul class="unamer" style="display:none"><li class="fname">First_Name</li><li class="lname">Last_Name</li><li class="fullname">Full_Name</li></ul>');

				}, 4000); 

			}),



			e("body").on("click", "#nametags", function() {

				e('.unamer').toggle();

			}),

                                                 

			e("body").on("click", ".introfed2", function() {

				e(".fedlist span").removeClass("backfeed");

				e(this).addClass("backfeed");

				var at = e("#intofed-sec1").attr("assignid");

				var st = e("#spfilter").val();

				e.ajax({

			        url: "feedback/adaptive/ajx.php",

			        method: "POST",

			        data: { action: "feedaction",fedtype: "introsupport",search_query: st ,assignid: at},

			        success: function(a) {

			            var n = JSON.parse(a);

			            if(e.isEmptyObject(n)){

			            	e(".suppbtn").html('<span class="nosup">No keywords available <img src="/mod/assign/feedback/adaptive/assets/sadimogi1.png" alt="smile emoji" class="emoji"><br> Use feedback to find alternative keywords!</span>');

			            }else{

				            e(".nosup").remove();

				            e(".supp").remove();

				            e.each(n, function(index, t) {

				            	e(".suppbtn").append('<span class="supp" supfedid="' + t.id + '" keyid="'+ t.kid +'" assid="'+ t.assignment_id +'" >' + t.keyword + '</span>')

				            });			            	

			            }

			        },

			        error: function(t, a, n) {

			            console.error("AJAX Error:", a, n);

			        }

			    })				 

			}),



			e("body").on("click", ".mainfed2", function() {

				e(".fedlist span").removeClass("backfeed");

				e(this).addClass("backfeed");

				var at = e("#intofed-sec1").attr("assignid");

				var st = e("#spfilter").val();

				e.ajax({

			        url: "feedback/adaptive/ajx.php",

			        method: "POST",

			        data: { action: "feedaction",fedtype: "mainsupport",search_query: st ,assignid: at},

			        success: function(a) {

			            var n = JSON.parse(a);

			            if(e.isEmptyObject(n)){

			            	e(".suppbtn").html('<span class="nosup">No keywords available <img src="/mod/assign/feedback/adaptive/assets/sadimogi1.png" alt="smile emoji" class="emoji"><br> Use feedback to find alternative keywords!</span>');

				        }else{

				            e(".nosup").remove();

				            e(".supp").remove();

				            e.each(n, function(index, t) {

				            	e(".suppbtn").append('<span class="supp" supfedid="' + t.id + '" keyid="'+ t.kid +'" assid="'+ t.assignment_id +'" >' + t.keyword + '</span>')

				            });

			            }

			        },

			        error: function(t, a, n) {

			            console.error("AJAX Error:", a, n);

			        }

			    })				 

			}),



			e("body").on("click", ".finalfed2", function() {

				e(".fedlist span").removeClass("backfeed");

				e(this).addClass("backfeed");

				var at = e("#intofed-sec1").attr("assignid");

				var st = e("#spfilter").val();

				e.ajax({

			        url: "feedback/adaptive/ajx.php",

			        method: "POST",

			        data: { action: "feedaction",fedtype: "finalsupport",search_query: st ,assignid: at},

			        success: function(a) {

			            var n = JSON.parse(a);

			            if(e.isEmptyObject(n)){

		            		e(".suppbtn").html('<span class="nosup">No keywords available <img src="/mod/assign/feedback/adaptive/assets/sadimogi1.png" alt="smile emoji" class="emoji"><br> Use feedback to find alternative keywords!</span>');

			            }else{

				            e(".nosup").remove();

				            e(".supp").remove();

				            e.each(n, function(index, t) {

				            	e(".suppbtn").append('<span class="supp" supfedid="' + t.id + '" keyid="'+ t.kid +'" assid="'+ t.assignment_id +'" >' + t.keyword + '</span>')

				            });

			            }

			        },

			        error: function(t, a, n) {

			            console.error("AJAX Error:", a, n);

			        }

			    })				 

			}),



			e("body").on("click", ".recomed", function() {

				e('.reclist').toggle();

			}),



			e("body").on("click", ".recomadd", function() {

				var tp = e(this).closest('li').data("type");

				var fe = e(this).closest('li').data("feed");

				if(tp == 1){

					e(".introfeedback").trigger("click", [fe]);

				}else if(tp == 2){

					e(".mainfeedback").trigger("click", [fe]);	

				}else if(tp == 3){

					e(".finalfeedback").trigger("click", [fe]);

				}

			}),



			e("body").on("click", ".supp", function() {

				var fid = e(this).attr("supfedid");

				var kid = e(this).attr("keyid");

				var assid = e(this).attr("assid");

				e.ajax({

			        url: "feedback/adaptive/ajx.php",

			        method: "POST",

			        data: { action: "keyuses", kid: kid, fedbid: fid, assid: assid},

			        success: function(aresp) {

			            var na = JSON.parse(aresp);

			            if(na.status == false){

			            	alert(na.msg);

			            }else{

			            	var t = ' <span class="finalfed">' + na.data.feedback + "</span>";


							let placeholder = "(First_Name|Last_Name|Full_Name)";
							const regex = new RegExp(`\\{${placeholder}\\}`, 'g');
							let firstNameMatch = t.match(regex) ? true : false;
							var fullname=$('div[data-region="user-info"]>h4 a').contents().filter(function(){return 3===this.nodeType;}).text().trim();
							let result;
							t = t.replace(regex, (match, p1) => {
							    switch (p1) {
							        case "First_Name":
							            return fullname.split(" ")[0];
							        case "Last_Name":
							            const nameParts = fullname.split(" ");
							            return nameParts.length > 1 ? nameParts[nameParts.length - 1] : '';
							        case "Full_Name":
							            return fullname;
							        default:
							            return match; // If no match, return the placeholder itself
							    }
							});

			            	var editor = window.parent.tinyMCE.get('id_assignfeedbackcomments_editor');
							var content = editor.getContent({ format: 'html' });
						    var parser = new DOMParser();
						    var doc = parser.parseFromString(content, 'text/html');
						    var firstParagraph = doc.querySelector('p');
						    if (firstParagraph) {
						        firstParagraph.innerHTML += t;
						    }else {
						        var newParagraph = doc.createElement('p');
						        newParagraph.innerHTML = t;
						        doc.body.appendChild(newParagraph);
						    }
						    var updatedContent = doc.body.innerHTML;
						    editor.setContent(updatedContent);

							// e("#id_assignfeedbackcomments_editoreditable").find("p").length > 0 ? (e("#id_assignfeedbackcomments_editoreditable").find("p").append(t), e("#id_assignfeedbackcomments_editor").find("p").append(t)) : (e("#id_assignfeedbackcomments_editoreditable").append("<p>" + t + "</p>"), e("#id_assignfeedbackcomments_editor").append("<p>" + t + "</p>")), e("#id_assignfeedbackcomments_editoreditable").focus()

			            }

			        }

			    })	



			}), 



			e("body").on("keyup", ".prekey", function() {

				var keyword = e(this).val();

				e.ajax({

			        url: "feedback/adaptive/ajx.php",

			        method: "POST",

			        data: { action: "checkeyword", keyword: keyword},

			        success: function(aresp) {

			            var na = JSON.parse(aresp);

			            if(na.status == true){

			            	e(".ealert").html(na.msg);

			            }else{

			            	e(".ealert").html("");

			            }

			        }

			    })	

			}),





			//----------------- end -----------------------

			e(document).on("click", ".savefeedback", function() {

				var n = e(".insertfeedback").val().trim(),

					d = e(".feedtype").val();

				var ke = e(".prekey").val();	



				if ("" == n) return alert("Please enter feedback!"), !1;

				t.call([{

					methodname: "mod_assign_insertfeedback",

					args: {

						feedback: n,

						type: d,

						asgid: a

					}

				}])[0].done(function(t) {

					var a = JSON.parse(t);



				// -------------------start--------------------- 

				e.ajax({

			        url: "feedback/adaptive/ajx.php",

			        method: "POST",

			        data: { action: "savekeyword", keyword: ke, keyid: "0"},

			        success: function(aresp) {

			            var na = JSON.parse(aresp);

			            console.log("introsupport",na);

			        }

			    })				 

			    // -------------------end---------------------	



					a.result, e(".formfeedback").html(a.message), 1 == d && e(".ulclassone li").eq(0).before(e(a.htmltext)), 2 == d && e(".ulclasstwo li").eq(0).before(e(a.htmltext)), 3 == d && e(".ulclassthree li").eq(0).before(e(a.htmltext)), 4 == d && e(".ulclassfour li").eq(1).before(e(a.htmltext))

				})

			}), e(document).on("click", ".delete_feedback", function(a) {

				a.preventDefault();

				var n = e(this).attr("data-id");

				t.call([{

					methodname: "mod_assign_deletefeedback",

					args: {

						id: n

					}

				}])[0].done(function(t) {

					var a = JSON.parse(t);

					a.result, e(".formfeedback").html(a.message)

				})

			}), e(document).on("click", ".delete_feedback", function(t) {

				t.preventDefault(), e(this).parent().parent().remove()

			}), e(document).on("click", ".edit_feedback", function(t) {

				t.preventDefault();

				var a = e(this).attr("data-id"),

					n = e(this).parent().parent().text();

				// --------------------start-------------------- 

				e.ajax({

			        url: "feedback/adaptive/ajx.php",

			        method: "POST",

			        data: { action: "toupdatekeyword",fedid: a},

			        success: function(aresp) {

			            var na = JSON.parse(aresp);

			            console.log("aaaa----", na);

			            if(na.status == true){

			            	e(".upkeyword").html('<input type="text" name="keywords" class="prekey" editid="'+ na.data.id +'" placeholder="Enter Preferred Keywords" value="'+ na.data.keyword +'" />');

			            }

			        }

			    })				 

			    // ------------------end----------------------



				o.create({

					title: "Update feedback",

					body: '<div class="formfeedback"><form><input type="hidden" class = "feedtype" name="feedbacktype" value="1" /><div class="ealert"></div><div class="upkeyword"></div><textarea name="feedbacktext" class="updfeedback">' + n + '</textarea><button class ="updatefeedback" type="button" value="Submit" data-id="' + a + '">Update</button></form></div>',

					large: !0,

					footer: ""

				}).then(function(e) {

					return e.show(), e.getRoot().addClass("createtenantuser"), e.getRoot().on(i.hidden, function() {

						e.destroy()

					}), e

				})

			}), e(document).on("click", ".updatefeedback", function(a) {

				a.preventDefault();

				var n = e(this).attr("data-id"),

					d = e(".updfeedback").val();



				// ------------------start---------------------- 

				var key = e(".prekey").val();

				var keyid = e(".prekey").attr("editid")

				e.ajax({

			        url: "feedback/adaptive/ajx.php",

			        method: "POST",

			        data: { action: "savekeyword", keyword: key, feedid: n, keyid: keyid },

			        success: function(aresp) {

			            var na = JSON.parse(aresp);

			            if(na.status == true){

			            	console.log("Done");

			            }else{

			            	console.log(na.msg);

			            }

			        }

			    })				 

			    // -------------------end---------------------	







				t.call([{

					methodname: "mod_assign_updatefeedback",

					args: {

						id: n,

						feedback: d

					}

				}])[0].done(function(t) {

					var a = JSON.parse(t);

					a.result, e(".formfeedback").html(a.message), e("li[data-id=" + n + "]").find(".fbname").text(d)

				})

			})

		}

	}

});